eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"frontend/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTAdapter.extend({\n    	namespace: \'_ah/api/stockApi/v1\'\n    });\n  });//# sourceURL=frontend/adapters/application.js");

;eval("define(\"frontend/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=frontend/app.js");

;eval("define(\"frontend/components/lf-overlay\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Component.extend({\n      tagName: \'span\',\n      classNames: [\'lf-overlay\'],\n      didInsertElement: function() {\n        Ember.$(\'body\').addClass(\'lf-modal-open\');\n      },\n      willDestroy: function() {\n        Ember.$(\'body\').removeClass(\'lf-modal-open\');\n      },\n      click: function() {\n        this.sendAction(\'clickAway\');\n      }\n    });\n  });//# sourceURL=frontend/components/lf-overlay.js");

;eval("define(\"frontend/components/liquid-modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'liquid-modal\'],\n      currentContext: Ember.computed.oneWay(\'owner.modalContexts.lastObject\'),\n\n      owner: null, // set by injection\n\n      innerView: Ember.computed(\'currentContext\', function() {\n        var self = this,\n            current = this.get(\'currentContext\'),\n            name = current.get(\'name\'),\n            container = this.get(\'container\'),\n            component = container.lookup(\'component-lookup:main\').lookupFactory(name);\n        Ember.assert(\"Tried to render a modal using component \'\" + name + \"\', but couldn\'t find it.\", !!component);\n\n        var args = Ember.copy(current.get(\'params\'));\n\n        args.registerMyself = Ember.on(\'init\', function() {\n          self.set(\'innerViewInstance\', this);\n        });\n\n        // set source so we can bind other params to it\n        args._source = Ember.computed(function() {\n          return current.get(\"source\");\n        });\n\n        var otherParams = current.get(\"options.otherParams\");\n        var from, to;\n        for (from in otherParams) {\n          to = otherParams[from];\n          args[to] = Ember.computed.alias(\"_source.\"+from);\n        }\n\n        var actions = current.get(\"options.actions\") || {};\n\n        // Override sendAction in the modal component so we can intercept and\n        // dynamically dispatch to the controller as expected\n        args.sendAction = function(name) {\n          var actionName = actions[name];\n          if (!actionName) {\n            this._super.apply(this, Array.prototype.slice.call(arguments));\n            return;\n          }\n\n          var controller = current.get(\"source\");\n          var args = Array.prototype.slice.call(arguments, 1);\n          args.unshift(actionName);\n          controller.send.apply(controller, args);\n        };\n\n        return component.extend(args);\n      }),\n\n      actions: {\n        outsideClick: function() {\n          if (this.get(\'currentContext.options.dismissWithOutsideClick\')) {\n            this.send(\'dismiss\');\n          } else {\n            proxyToInnerInstance(this, \'outsideClick\');\n          }\n        },\n        escape: function() {\n          if (this.get(\'currentContext.options.dismissWithEscape\')) {\n            this.send(\'dismiss\');\n          } else {\n            proxyToInnerInstance(this, \'escape\');\n          }\n        },\n        dismiss: function() {\n          var source = this.get(\'currentContext.source\'),\n              proto = source.constructor.proto(),\n              params = this.get(\'currentContext.params\'),\n              clearThem = {};\n\n          for (var key in params) {\n            clearThem[key] = proto[key];\n          }\n          source.setProperties(clearThem);\n        }\n      }\n    });\n\n    function proxyToInnerInstance(self, message) {\n      var vi = self.get(\'innerViewInstance\');\n      if (vi) {\n        vi.send(message);\n      }\n    }\n  });//# sourceURL=frontend/components/liquid-modal.js");

;eval("define(\"frontend/components/lm-container\", \n  [\"ember\",\"liquid-fire/tabbable\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /*\n       Parts of this file were adapted from ic-modal\n\n       https://github.com/instructure/ic-modal\n       Released under The MIT License (MIT)\n       Copyright (c) 2014 Instructure, Inc.\n    */\n\n    var Ember = __dependency1__[\"default\"];\n\n    /**\n     * If you do something to move focus outside of the browser (like\n     * command+l to go to the address bar) and then tab back into the\n     * window, capture it and focus the first tabbable element in an active\n     * modal.\n     */\n    var lastOpenedModal = null;\n    Ember.$(document).on(\'focusin\', handleTabIntoBrowser);\n\n    function handleTabIntoBrowser() {\n      if (lastOpenedModal) {\n        lastOpenedModal.focus();\n      }\n    }\n\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'lm-container\'],\n      attributeBindings: [\'tabindex\'],\n      tabindex: 0,\n\n      keyUp: function(event) {\n        // Escape key\n        if (event.keyCode === 27) {\n          this.sendAction();\n        }\n      },\n\n      keyDown: function(event) {\n        // Tab key\n        if (event.keyCode === 9) {\n          this.constrainTabNavigation(event);\n        }\n      },\n\n      didInsertElement: function() {\n        this.focus();\n        lastOpenedModal = this;\n      },\n\n      willDestroy: function() {\n        lastOpenedModal = null;\n      },\n\n      focus: function() {\n        if (this.get(\'element\').contains(document.activeElement)) {\n          // just let it be if we already contain the activeElement\n          return;\n        }\n        var target = this.$(\'[autofocus]\');\n        if (!target.length) {\n          target = this.$(\':tabbable\');\n        }\n\n        if (!target.length) {\n          target = this.$();\n        }\n\n        target[0].focus();\n      },\n\n      constrainTabNavigation: function(event) {\n        var tabbable = this.$(\':tabbable\');\n        var finalTabbable = tabbable[event.shiftKey ? \'first\' : \'last\']()[0];\n        var leavingFinalTabbable = (\n          finalTabbable === document.activeElement ||\n            // handle immediate shift+tab after opening with mouse\n            this.get(\'element\') === document.activeElement\n        );\n        if (!leavingFinalTabbable) { return; }\n        event.preventDefault();\n        tabbable[event.shiftKey ? \'last\' : \'first\']()[0].focus();\n      }\n    });\n  });//# sourceURL=frontend/components/lm-container.js");

;eval("define(\"frontend/controllers/stocks\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	actions: {\n    		sortBy: function(property) {\n    			this.set(\'sortProperties\', [property]);\n    			this.set(\'sortAscending\', !this.get(\'sortAscending\'));\n    			var stocks = [\'code\',\n    						  \'companyName\',\n    						  \'currentPrice\',\n    						  \'pe\',\n    						  \'priceSales\',\n    						  \'eps\',\n    						  \'totalCashPerShare\',\n    						  \'bookValuePerShare\',\n    						  \'dividendYield\',\n    						  \'profitMargin\',\n    						  \'totalDebt\',\n    						  \'notes\',\n    						  \'yearsDebt\',\n    						  \'shares\'];\n    			for (var i = stocks.length - 1; i >= 0; i--) {\n    				this.set(stocks[i]+\'UpDown\', \'\');\n    			}\n    			if (this.get(\'sortAscending\')) {\n    				this.set(property+\'UpDown\', \'glyphicon-chevron-up\');\n    			}else {\n    				this.set(property+\'UpDown\', \'glyphicon-chevron-down\');\n    			}\n    		}\n    	}\n    });\n  });//# sourceURL=frontend/controllers/stocks.js");

;eval("define(\"frontend/controllers/stocks/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    	hasCode: Ember.computed.notEmpty(\'code\'),\n    	actions: {\n    		save: function() {\n    			if (this.get(\'hasCode\')) {\n    				var _this = this;\n    				this.get(\'model\').save().then( function() {\n    					_this.transitionToRoute(\'stocks\');\n    				});\n    			}else{\n    				this.set(\'errorMessage\', \'You have to put a Stock Symbol\');\n    				this.set(\'classError\', \'has-error\');\n    			}\n    		},\n    		cancel: function() {\n    			this.transitionToRoute(\'stocks.index\');\n    			return false;\n    		}\n    	}\n    });\n  });//# sourceURL=frontend/controllers/stocks/new.js");

;eval("define(\"frontend/helpers/liquid-bind\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* liquid-bind is really just liquid-with with a pre-provided block\n       that just says {{this}} */\n\n    __exports__[\"default\"] = function liquidBindHelper() {\n      var options = arguments[arguments.length-1],\n          container = options.data.view.container,\n          liquidWith = container.lookupFactory(\'helper:liquid-with\');\n      options.fn = container.lookup(\'template:liquid-with-self\');\n      return liquidWith.apply(this, arguments);\n    }\n  });//# sourceURL=frontend/helpers/liquid-bind.js");

;eval("define(\"frontend/helpers/liquid-box\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = function(){\n      Ember.assert(\"liquid-box is deprecated, see CHANGELOG.md\", false);\n    }\n  });//# sourceURL=frontend/helpers/liquid-box.js");

;eval("define(\"frontend/helpers/liquid-if\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    function factory(invert) {\n      return function(property, options) {\n        var View = options.data.view.container.lookupFactory(\'view:liquid-if\');\n\n        var templates = [options.fn, options.inverse];\n        if (invert) {\n          templates.reverse();\n        }\n        delete options.fn;\n        delete options.inverse;\n\n        if (options.hash.containerless) {\n          View = View.extend(Ember._Metamorph);\n        }\n\n        options.hash.templates = templates;\n        options.hash.showFirstBinding = property;\n        return Ember.Handlebars.helpers.view.call(this, View, options);\n      };\n    }\n\n    __exports__.factory = factory;__exports__[\"default\"] = factory(false);\n  });//# sourceURL=frontend/helpers/liquid-if.js");

;eval("define(\"frontend/helpers/liquid-measure\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = function(){\n      Ember.assert(\"liquid-measure is deprecated, see CHANGELOG.md\", false);\n    }\n  });//# sourceURL=frontend/helpers/liquid-measure.js");

;eval("define(\"frontend/helpers/liquid-outlet\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function liquidOutletHelper(property, options) {\n      if (property && property.data && property.data.isRenderData) {\n        options = property;\n        property = \'main\';\n        options.types.push(\'STRING\');\n      }\n\n      var View = options.data.view.container.lookupFactory(\'view:liquid-outlet\');\n      if (options.hash.containerless) {\n        View = View.extend(Ember._Metamorph);\n      }\n      options.hash.viewClass = View;\n      return Ember.Handlebars.helpers.outlet.call(this, property, options);\n    }\n  });//# sourceURL=frontend/helpers/liquid-outlet.js");

;eval("define(\"frontend/helpers/liquid-unless\", \n  [\"frontend/helpers/liquid-if\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var factory = __dependency1__.factory;\n    __exports__[\"default\"] = factory(true);\n  });//# sourceURL=frontend/helpers/liquid-unless.js");

;eval("define(\"frontend/helpers/liquid-with\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function liquidWithHelper() {\n      var context = arguments[0],\n          options = arguments[arguments.length-1],\n          View = options.data.view.container.lookupFactory(\'view:liquid-with\'),\n          innerOptions = {\n            data: options.data,\n            hash: {},\n            hashTypes: {}\n          };\n\n      View = View.extend({\n        originalArgs: Array.prototype.slice.apply(arguments, [0, -1]),\n        originalHash: options.hash,\n        originalHashTypes: options.hashTypes,\n        innerTemplate: options.fn\n      });\n\n      if (options.hash.containerless) {\n        View = View.extend(Ember._Metamorph);\n      }\n\n      innerOptions.hash.boundContextBinding = context;\n\n      [\n        \'class\',\n        \'classNames\',\n        \'classNameBindings\',\n        \'use\',\n        \'id\',\n        \'growDuration\',\n        \'growPixelsPerSecond\',\n        \'growEasing\',\n        \'enableGrowth\',\n        \'containerless\'\n      ].forEach(function(field){\n        if (options.hash.hasOwnProperty(field)) {\n          innerOptions.hash[field] = options.hash[field];\n          innerOptions.hashTypes[field] = options.hashTypes[field];\n        }\n      });\n\n      return Ember.Handlebars.helpers.view.call(this, View, innerOptions);\n    }\n  });//# sourceURL=frontend/helpers/liquid-with.js");

;eval("define(\"frontend/helpers/with-apply\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    // This helper is internal to liquid-with.\n    __exports__[\"default\"] = function withApplyHelper(options){\n      var view = options.data.view,\n          parent = view.get(\'liquidWithParent\'),\n          withArgs = parent.get(\'originalArgs\').slice();\n\n      withArgs[0] = \'lwith-view.boundContext\';\n      options = Ember.copy(options);\n\n      // This works to inject our keyword in Ember >= 1.9\n      if (!view._keywords) {\n        view._keywords = {};\n      }\n      view._keywords[\'lwith-view\'] = view;\n\n      // This works to inject our keyword in Ember < 1.9\n      if (!options.data.keywords) {\n        options.data.keywords = {};\n      }\n      options.data.keywords[\'lwith-view\'] = view;\n      options.fn = parent.get(\'innerTemplate\');\n      options.hash = parent.get(\'originalHash\');\n      options.hashTypes = parent.get(\'originalHashTypes\');\n      withArgs.push(options);\n      return Ember.Handlebars.helpers[\"with\"].apply(this, withArgs);\n    }\n  });//# sourceURL=frontend/helpers/with-apply.js");

;eval("define(\"frontend/initializers/export-application-global\", \n  [\"ember\",\"frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=frontend/initializers/export-application-global.js");

;eval("define(\"frontend/initializers/liquid-fire\", \n  [\"liquid-fire\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var initialize = __dependency1__.initialize;\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'liquid-fire\',\n\n      initialize: function(container, application) {\n        if (!Ember.$.Velocity) {\n          Ember.warn(\"Velocity.js is missing\");\n        } else {\n          var version = Ember.$.Velocity.version;\n          var recommended = [0, 11, 8];\n          if (Ember.compare(recommended, [version.major, version.minor, version.patch]) === 1) {\n            Ember.warn(\"You should probably upgrade Velocity.js, recommended minimum is \" + recommended.join(\'.\'));\n          }\n        }\n\n        initialize(container, container.lookupFactory(\'transitions:main\'));\n\n        if (Ember.testing) {\n          Ember.Test.registerWaiter(function(){\n            return container.lookup(\'transitions:map\').runningTransitions() === 0;\n          });\n        }\n      }\n    };\n  });//# sourceURL=frontend/initializers/liquid-fire.js");

;eval("define(\"frontend/models/stock\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    \r\n    var Stock = DS.Model.extend({\r\n      code: DS.attr(\'string\'),\r\n      companyName: DS.attr(\'string\'),\r\n      currentPrice: DS.attr(\'string\'),\r\n      pe: DS.attr(\'string\'),\r\n      priceSales: DS.attr(\'string\'),\r\n      eps: DS.attr(\'string\'),\r\n      totalCashPerShare: DS.attr(\'string\'),\r\n      bookValuePerShare: DS.attr(\'string\'),\r\n      dividendYield: DS.attr(\'string\'),\r\n      profitMargin: DS.attr(\'string\'),\r\n      totalDebt: DS.attr(\'string\'),\r\n      notes: DS.attr(\'string\'),\r\n      // yearsDebt: DS.attr(\'string\'),\r\n      shares: DS.attr(\'string\')\r\n    });\r\n    \r\n    Stock.reopenClass({\r\n      FIXTURES: [\r\n        {id:1, code:\'ACG\', companyName: \'Atcor Medical Holdings\', currentPrice:\'$0.09\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:2, code:\'ELX\', companyName: \'Ellex Medical Lasers Limited\', currentPrice:\'$0.29\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:3, code:\'CIR\', companyName: \'Circadian Technologies Limited\', currentPrice:\'$0.17\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:4, code:\'MGX\', companyName: \'Mount Gibson Iron Limited\', currentPrice:\'$0.41\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:5, code:\'ACR\', companyName: \'Acrux Limited\', currentPrice:\'$1.28\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:6, code:\'CMG\', companyName: \'Chandler Macleod Group Limited\', currentPrice:\'$0.34\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:7, code:\'BLY\', companyName: \'Boart Longyear Ltd.\', currentPrice:\'$0.19\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:8, code:\'OSL\', companyName: \'Oncosil Medical Ltd\', currentPrice:\'$0.09\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:9, code:\'RNO\', companyName: \'Rhinomed Ltd\', currentPrice:\'$0.03\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:10, code:\'XRF\', companyName: \'XRF Scientific Limited\', currentPrice:\'$0.18\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:11, code:\'FRI\', companyName: \'Finbar Group Limited\', currentPrice:\'$1.39\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:12, code:\'IRI\', companyName: \'Integrated Research Limited\', currentPrice:\'$0.98\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:13, code:\'CDD\', companyName: \'Cardno Limited\', currentPrice:\'$3.22\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:14, code:\'FPS\', companyName: \'Fiducian Portfolio Services Limited\', currentPrice:\'$1.62\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:15, code:\'MLB\', companyName: \'Melbourne IT Limited\', currentPrice:\'$1.32\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:16, code:\'MFC\', companyName: \'Metals Finance Ltd\', currentPrice:\'$0.07\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:17, code:\'LCT\', companyName: \'Living Cell Technologies Ltd.\', currentPrice:\'$0.08\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:18, code:\'RFL\', companyName: \'Rubik Financial Limited\', currentPrice:\'$0.25\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:19, code:\'CGO\', companyName: \'CPT Global Limited\', currentPrice:\'$0.69\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:20, code:\'AAX\', companyName: \'Ausenco Limited\', currentPrice:\'$0.46\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:21, code:\'ATP\', companyName: \'Atlas Pearls and Perfumes Ltd\', currentPrice:\'$0.09\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:22, code:\'TFC\', companyName: \'TFS Corporation Limited\', currentPrice:\'$1.26\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'},\r\n        {id:23, code:\'ACG\', companyName: \'Atcor Medical Holdings\', currentPrice:\'$0.09\', pe:\'N/A\', priceSales:\'2.93\', eps:\'-$0.02\', totalCashPerShare:\'$0.01\', bookValuePerShare:\'$0.02\', dividendYield:\'0.00%\', profitMargin:\'-52.71%\', totalDebt:\'$0.00\', notes:\'buy\', yearsDebt:\'0.00\', shares:\'157,440,325\'}\r\n      ]\r\n    });\r\n    \r\n    __exports__[\"default\"] = Stock;\n  });//# sourceURL=frontend/models/stock.js");

;eval("define(\"frontend/router\", \n  [\"ember\",\"frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'stocks\', function() {\n      	this.route(\'new\');\n       });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=frontend/router.js");

;eval("define(\"frontend/routes/stocks\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function() {\n    		return this.store.find(\'stock\');\n    	},\n    	actions: {\n    		\"delete\": function(stock) {\n    			stock.destroyRecord();\n    			this.transitionTo(\'stocks.index\');\n    		},\n    		saveNote: function(stock) {\n    			stock.save();\n    		}\n    	}\n    });\n  });//# sourceURL=frontend/routes/stocks.js");

;eval("define(\"frontend/routes/stocks/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function(){\n    		return this.store.createRecord(\'stock\');\n    	},\n    	actions: {\n    		save: function() {\n    			return true;\n    		},\n    		cancel: function() {\n    			return true;\n    		}\n    	}\n    });\n  });//# sourceURL=frontend/routes/stocks/new.js");

;eval("define(\"frontend/serializers/application\", \n  [\"ember-data\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTSerializer.extend({\n\n    	serializeIntoHash: function(hash, type, record, options) {\n    		Ember.merge(hash, this.serialize(record, options));\n    	},\n\n    	extractMeta: function(store, type, payload) {\n        if (payload && payload.kind) {\n          // store.metaForType(type, { total: payload.kind });  // sets the metadata for \"post\"\n          delete payload.kind;  // keeps ember data from trying to parse \"total\" as a record\n        }\n        if (payload && payload.etag) {\n          // store.metaForType(type, { total: payload.etag });  // sets the metadata for \"post\"\n          delete payload.etag;  // keeps ember data from trying to parse \"total\" as a record\n        }\n\n        if (!payload.stocks) {\n          payload.stocks=[];\n        }\n      }\n    });\n  });//# sourceURL=frontend/serializers/application.js");

;eval("define(\"frontend/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"navbar-brand\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"<span class=\\\"flaticon-stocks3\\\"></span> Stock Watch List\", \"index\", options) : helperMissing.call(depth0, \"link-to\", \"<span class=\\\"flaticon-stocks3\\\"></span> Stock Watch List\", \"index\", options))));\n      data.buffer.push(\"\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Show stocks\", \"stocks.index\", options) : helperMissing.call(depth0, \"link-to\", \"Show stocks\", \"stocks.index\", options))));\n      data.buffer.push(\"\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"liquid-outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=frontend/templates/application.js");

;eval("define(\"frontend/templates/components/liquid-modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'lm-container\'] || (depth0 && depth0[\'lm-container\']),options={hash:{\n        \'action\': (\"escape\")\n      },hashTypes:{\'action\': \"STRING\"},hashContexts:{\'action\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"lm-container\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    <div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":lf-dialog cc.options.dialogClass\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" role=\\\"dialog\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'aria-labelledby\': (\"cc.options.ariaLabelledBy\"),\n        \'aria-label\': (\"cc.options.ariaLabel\")\n      },hashTypes:{\'aria-labelledby\': \"STRING\",\'aria-label\': \"STRING\"},hashContexts:{\'aria-labelledby\': depth0,\'aria-label\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n      \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"innerView\", {hash:{\n        \'dismiss\': (\"dismiss\")\n      },hashTypes:{\'dismiss\': \"STRING\"},hashContexts:{\'dismiss\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'lf-overlay\'] || (depth0 && depth0[\'lf-overlay\']),options={hash:{\n        \'clickAway\': (\"outsideClick\")\n      },hashTypes:{\'clickAway\': \"STRING\"},hashContexts:{\'clickAway\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"lf-overlay\", options))));\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'liquid-with\'] || (depth0 && depth0[\'liquid-with\']),options={hash:{\n        \'class\': (\"lm-with\"),\n        \'containerless\': (true)\n      },hashTypes:{\'class\': \"STRING\",\'containerless\': \"BOOLEAN\"},hashContexts:{\'class\': depth0,\'containerless\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"currentContext\", \"as\", \"cc\", options) : helperMissing.call(depth0, \"liquid-with\", \"currentContext\", \"as\", \"cc\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=frontend/templates/components/liquid-modal.js");

;eval("define(\"frontend/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      return buffer;\n      \n    });\n  });//# sourceURL=frontend/templates/index.js");

;eval("define(\"frontend/templates/liquid-with-self\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=frontend/templates/liquid-with-self.js");

;eval("define(\"frontend/templates/liquid-with\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"with-apply\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=frontend/templates/liquid-with.js");

;eval("define(\"frontend/templates/stocks\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n						<tr>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.code\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.companyName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.currentPrice\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.pe\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.priceSales\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.eps\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.totalCashPerShare\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.bookValuePerShare\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.dividendYield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.profitMargin\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.totalDebt\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\\n									<div class=\\\"col-xs-6 col-xs-offset-3\\\">\\n										\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"stock.notes\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n									</div>\\n							</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.yearsDebt\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stock.shares\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<th>\\n								\");\n      stack1 = helpers[\'if\'].call(depth0, \"stock.isSaving\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								<a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"delete\", \"stock\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-danger\\\"><span class=\\\"glyphicon glyphicon-trash\\\"></span></a>\\n							</th>\\n						</tr>\\n					\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n									<p>saving...</p>\\n								\");\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"	\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"stock.isDirty\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								\");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n										<a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"saveNote\", \"stock\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-success\\\"><span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span></a>\\n									\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"container-fluid\\\">\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-sm-12\\\">\\n			<h1>Stocks</h1>\\n			\");\n      stack1 = helpers._triageMustache.call(depth0, \"liquid-outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			<table class=\\\"table table-hover table-condensed text-center\\\">\\n				<thead>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"code\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Stock Code <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"codeUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"companyName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Company Name <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"companyNameUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"currentPrice\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Current Price <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"currentPriceUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"pe\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">P/E <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"peUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"priceSales\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">P/S <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"priceSalesUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"eps\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">EPS <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"epsUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"totalCashPerShare\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Cash holdings per Share <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"totalCashPerShareUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"bookValuePerShare\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">BVPS <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"bookValuePerShareUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"dividenYield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Dividen Yield <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"dividendYieldUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"profitMargin\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Net Profit Margin <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"profitMarginUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"totalDebt\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Debt <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"totalDebtUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"notes\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Notes <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"notesUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"yearsDebt\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Years to pay off Debt <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"yearsDebtUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n					<th \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortBy\", \"shares\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"text-center\\\">Shares <span class=\\\"glyphicon\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"sharesUpDown\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></th>\\n				</thead>\\n				<tbody>\\n					\");\n      stack1 = helpers.each.call(depth0, \"stock\", \"in\", \"\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				</tbody>\\n			</table>\\n		</div>\\n	</div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=frontend/templates/stocks.js");

;eval("define(\"frontend/templates/stocks/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"btn btn-primary\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Add Stock <span class=\'glyphicon glyphicon-plus\'></span>\", \"stocks.new\", options) : helperMissing.call(depth0, \"link-to\", \"Add Stock <span class=\'glyphicon glyphicon-plus\'></span>\", \"stocks.new\", options))));\n      \n    });\n  });//# sourceURL=frontend/templates/stocks/index.js");

;eval("define(\"frontend/templates/stocks/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<form \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", \"stock\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" role=\\\"form\\\">\\n	<div class=\\\"form-group\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"classError\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n		<label for=\\\"code\\\" class=\\\"control-label sr-only\\\">Symbol:</label>\\n		<div class=\\\"col-sm-4\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"code\"),\n        \'class\': (\"form-control\"),\n        \'id\': (\"code\"),\n        \'placeholder\': (\"Enter stock Symbol\")\n      },hashTypes:{\'value\': \"ID\",\'class\': \"STRING\",\'id\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'class\': depth0,\'id\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n		<p class=\\\"help-block\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"errorMessage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n	</div>\\n	<button type=\\\"submit\\\" class=\\\"btn btn-success\\\"><span class=\\\"glyphicon glyphicon-floppy-disk\\\"></span></button>\\n	<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-danger\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button>\\n</form>\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=frontend/templates/stocks/new.js");

;eval("define(\"frontend/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/adapters/application.jshint.js");

;eval("define(\"frontend/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/app.jshint.js");

;eval("define(\"frontend/tests/controllers/stocks.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/stocks.js should pass jshint\', function() { \n      ok(true, \'controllers/stocks.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/controllers/stocks.jshint.js");

;eval("define(\"frontend/tests/controllers/stocks/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/stocks\');\n    test(\'controllers/stocks/new.js should pass jshint\', function() { \n      ok(true, \'controllers/stocks/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/controllers/stocks/new.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/helpers\');\n    test(\'frontend/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/helpers/resolver.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/helpers\');\n    test(\'frontend/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/helpers/start-app.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests\');\n    test(\'frontend/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/test-helper.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/unit/adapters\');\n    test(\'frontend/tests/unit/adapters/application-test.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/unit/adapters/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/unit/adapters/application-test.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/unit/controllers/stocks-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/unit/controllers\');\n    test(\'frontend/tests/unit/controllers/stocks-test.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/unit/controllers/stocks-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/unit/controllers/stocks-test.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/unit/controllers/stocks/new-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/unit/controllers/stocks\');\n    test(\'frontend/tests/unit/controllers/stocks/new-test.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/unit/controllers/stocks/new-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/unit/controllers/stocks/new-test.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/unit/models/stock-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/unit/models\');\n    test(\'frontend/tests/unit/models/stock-test.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/unit/models/stock-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/unit/models/stock-test.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/unit/routes/stocks-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/unit/routes\');\n    test(\'frontend/tests/unit/routes/stocks-test.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/unit/routes/stocks-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/unit/routes/stocks-test.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/unit/routes/stocks/new-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/unit/routes/stocks\');\n    test(\'frontend/tests/unit/routes/stocks/new-test.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/unit/routes/stocks/new-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/unit/routes/stocks/new-test.jshint.js");

;eval("define(\"frontend/tests/frontend/tests/unit/serializers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - frontend/tests/unit/serializers\');\n    test(\'frontend/tests/unit/serializers/application-test.js should pass jshint\', function() { \n      ok(true, \'frontend/tests/unit/serializers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/frontend/tests/unit/serializers/application-test.jshint.js");

;eval("define(\"frontend/tests/helpers/resolver\", \n  [\"ember/resolver\",\"frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=frontend/tests/helpers/resolver.js");

;eval("define(\"frontend/tests/helpers/start-app\", \n  [\"ember\",\"frontend/app\",\"frontend/router\",\"frontend/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=frontend/tests/helpers/start-app.js");

;eval("define(\"frontend/tests/models/stock.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/stock.js should pass jshint\', function() { \n      ok(true, \'models/stock.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/models/stock.jshint.js");

;eval("define(\"frontend/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/router.jshint.js");

;eval("define(\"frontend/tests/routes/stocks.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/stocks.js should pass jshint\', function() { \n      ok(true, \'routes/stocks.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/routes/stocks.jshint.js");

;eval("define(\"frontend/tests/routes/stocks/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/stocks\');\n    test(\'routes/stocks/new.js should pass jshint\', function() { \n      ok(true, \'routes/stocks/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/routes/stocks/new.jshint.js");

;eval("define(\"frontend/tests/serializers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - serializers\');\n    test(\'serializers/application.js should pass jshint\', function() { \n      ok(true, \'serializers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/serializers/application.jshint.js");

;eval("define(\"frontend/tests/test-helper\", \n  [\"frontend/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=frontend/tests/test-helper.js");

;eval("define(\"frontend/tests/transitions.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'transitions.js should pass jshint\', function() { \n      ok(true, \'transitions.js should pass jshint.\'); \n    });\n  });//# sourceURL=frontend/tests/transitions.jshint.js");

;eval("define(\"frontend/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });//# sourceURL=frontend/tests/unit/adapters/application-test.js");

;eval("define(\"frontend/tests/unit/controllers/stocks-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:stocks\', \'StocksController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=frontend/tests/unit/controllers/stocks-test.js");

;eval("define(\"frontend/tests/unit/controllers/stocks/new-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:stocks/new\', \'StocksNewController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=frontend/tests/unit/controllers/stocks/new-test.js");

;eval("define(\"frontend/tests/unit/models/stock-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'stock\', \'Stock\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=frontend/tests/unit/models/stock-test.js");

;eval("define(\"frontend/tests/unit/routes/stocks-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:stocks\', \'StocksRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=frontend/tests/unit/routes/stocks-test.js");

;eval("define(\"frontend/tests/unit/routes/stocks/new-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:stocks/new\', \'StocksNewRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=frontend/tests/unit/routes/stocks/new-test.js");

;eval("define(\"frontend/tests/unit/serializers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'serializer:application\', \'ApplicationSerializer\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var serializer = this.subject();\n      ok(serializer);\n    });\n  });//# sourceURL=frontend/tests/unit/serializers/application-test.js");

;eval("define(\"frontend/transitions\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = function(){\r\n    	this.transition(\r\n    		this.fromRoute(\'stocks.index\'),\r\n    		this.toRoute(\'stocks.new\'),\r\n    		this.use(\'toLeft\'),\r\n    		this.reverse(\'toRight\')\r\n    	);\r\n    \r\n    	this.transition(\r\n    		this.fromRoute(\'index\'),\r\n    		this.toRoute(\'stocks\'),\r\n    		this.use(\'toDown\', {duration: 500}),\r\n    		this.reverse(\'toUp\', {duration: 500})\r\n    	);\r\n    \r\n    	this.transition(\r\n    		this.fromNonEmptyModel(),\r\n    		this.hasClass(\'stock.isDirty\'),\r\n    		this.toModel(true),\r\n    		this.use(\'toUp\'),\r\n    		this.reverse(\'toDown\')\r\n    	);\r\n    \r\n    	this.transition(\r\n    		this.fromNonEmptyModel(),\r\n    		this.hasClass(\'stock.isSaving\'),\r\n    		this.toModel(true),\r\n    		this.use(\'toUp\'),\r\n    		this.reverse(\'toDown\')\r\n    	);\r\n    }\n  });//# sourceURL=frontend/transitions.js");

;eval("define(\"frontend/transitions/cross-fade\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // BEGIN-SNIPPET cross-fade-definition\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    var Promise = __dependency1__.Promise;\n    __exports__[\"default\"] = function crossFade(oldView, insertNewView, opts) {\n      stop(oldView);\n      return insertNewView().then(function(newView) {\n        return Promise.all([\n          animate(oldView, {opacity: 0}, opts),\n          animate(newView, {opacity: [1, 0]}, opts)\n        ]);\n      });\n    }\n    // END-SNIPPET\n  });//# sourceURL=frontend/transitions/cross-fade.js");

;eval("define(\"frontend/transitions/fade\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // BEGIN-SNIPPET fade-definition\n    var isAnimating = __dependency1__.isAnimating;\n    var finish = __dependency1__.finish;\n    var timeSpent = __dependency1__.timeSpent;\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    __exports__[\"default\"] = function fade(oldView, insertNewView, opts) {\n      var firstStep,\n          outOpts = opts;\n\n      if (isAnimating(oldView, \'fade-out\')) {\n        // if the old view is already fading out, let it finish.\n        firstStep = finish(oldView, \'fade-out\');\n      } else {\n        if (isAnimating(oldView, \'fade-in\')) {\n          // if the old view is partially faded in, scale its fade-out\n          // duration appropriately.\n          outOpts = { duration: timeSpent(oldView, \'fade-in\') };\n        }\n        stop(oldView);\n        firstStep = animate(oldView, {opacity: 0}, outOpts, \'fade-out\');\n      }\n\n      return firstStep.then(insertNewView).then(function(newView){\n        return animate(newView, {opacity: [1, 0]}, opts, \'fade-in\');\n      });\n    }\n    // END-SNIPPET\n  });//# sourceURL=frontend/transitions/fade.js");

;eval("define(\"frontend/transitions/flex-grow\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    var Promise = __dependency1__.Promise;\n    __exports__[\"default\"] = function flexGrow(oldView, insertNewView, opts) {\n      stop(oldView);\n      return insertNewView().then(function(newView) {\n        return Promise.all([\n          animate(oldView, {\'flex-grow\': 0}, opts),\n          animate(newView, {\'flex-grow\': [1, 0]}, opts)\n        ]);\n      });\n    }\n  });//# sourceURL=frontend/transitions/flex-grow.js");

;eval("define(\"frontend/transitions/modal-popup\", \n  [\"ember\",\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Promise = __dependency2__.Promise;\n    var Velocity = Ember.$.Velocity;\n\n    function hideModal(oldView) {\n      var box, obscure;\n      if (!oldView ||\n          !(box = oldView.$(\'.lm-container > div\')) ||\n          !(box = box[0]) ||\n          !(obscure = oldView.$(\'.lf-overlay\')) ||\n          !(obscure = obscure[0])) {\n        return Promise.resolve();\n      }\n\n      return Promise.all([\n        Velocity.animate(obscure, {opacity: [0, 0.5]}, {duration: 250}),\n        Velocity.animate(box, {scale: [0, 1]}, {duration: 250})\n      ]);\n    }\n\n    function revealModal(insertNewView) {\n      return insertNewView().then(function(newView){\n        var box, obscure;\n        if (!newView ||\n            !(box = newView.$(\'.lm-container > div\')[0]) ||\n            !(obscure = newView.$(\'.lf-overlay\')[0])) {\n          return;\n        }\n\n        // we\'re not going to animate the whole view, rather we\'re going\n        // to animate two pieces of it separately. So we move the view\n        // properties down onto the individual elements, so that the\n        // animate function can reveal them at precisely the right time.\n        Ember.$(box).css({\n          display: \'none\'\n        });\n\n        Ember.$(obscure).css({\n          display: \'none\'\n        });\n        newView.$().css({\n          display: \'\',\n          visibility: \'\'\n        });\n\n        return Promise.all([\n          Velocity.animate(obscure, {opacity: [0.5, 0]}, {duration: 250, display: \'\'}),\n          Velocity.animate(box, {scale: [1, 0]}, {duration: 250, display: \'\'})\n        ]);\n      });\n    }\n\n    __exports__[\"default\"] = function modalPopup(oldView, insertNewView) {\n      return hideModal(oldView).then(function() {\n        return revealModal(insertNewView);\n      });\n    }\n  });//# sourceURL=frontend/transitions/modal-popup.js");

;eval("define(\"frontend/transitions/move-over\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var stop = __dependency1__.stop;\n    var animate = __dependency1__.animate;\n    var Promise = __dependency1__.Promise;\n    var isAnimating = __dependency1__.isAnimating;\n    var finish = __dependency1__.finish;\n\n    __exports__[\"default\"] = function moveOver(oldView, insertNewView, dimension, direction, opts) {\n      var oldParams = {},\n          newParams = {},\n          firstStep,\n          property,\n          measure;\n\n      if (dimension.toLowerCase() === \'x\') {\n        property = \'translateX\';\n        measure = \'width\';\n      } else {\n        property = \'translateY\';\n        measure = \'height\';\n      }\n\n      if (isAnimating(oldView, \'moving-in\')) {\n        firstStep = finish(oldView, \'moving-in\');\n      } else {\n        stop(oldView);\n        firstStep = Promise.resolve();\n      }\n\n\n      return firstStep.then(insertNewView).then(function(newView){\n        if (newView && newView.$() && oldView && oldView.$()) {\n          var sizes = [parseInt(newView.$().css(measure), 10),\n                       parseInt(oldView.$().css(measure), 10)];\n          var bigger = Math.max.apply(null, sizes);\n          oldParams[property] = (bigger * direction) + \'px\';\n          newParams[property] = [\"0px\", (-1 * bigger * direction) + \'px\'];\n        } else {\n          oldParams[property] = (100 * direction) + \'%\';\n          newParams[property] = [\"0%\", (-100 * direction) + \'%\'];\n        }\n\n        return Promise.all([\n          animate(oldView, oldParams, opts),\n          animate(newView, newParams, opts, \'moving-in\')\n        ]);\n      });\n    }\n  });//# sourceURL=frontend/transitions/move-over.js");

;eval("define(\"frontend/transitions/scroll-then\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function() {\n      Ember.assert(\n        \"You must provide a transition name as the first argument to scrollThen. Example: this.use(\'scrollThen\', \'toLeft\')\",\n        \'string\' === typeof arguments[2]\n      );\n\n      var el = document.getElementsByTagName(\'html\'),\n          transitionArgs = Array.prototype.slice.call(arguments, 0, 2),\n          nextTransition = this.lookup(arguments[2]),\n          self = this,\n          options = arguments[3] || {};\n\n      Ember.assert(\n        \"The second argument to scrollThen is passed to Velocity\'s scroll function and must be an object\",\n        \'object\' === typeof options\n      );\n\n      // set scroll options via: this.use(\'scrollThen\', \'ToLeft\', {easing: \'spring\'})\n      options = Ember.merge({duration: 500, offset: 0}, options);\n\n      // additional args can be passed through after the scroll options object\n      // like so: this.use(\'scrollThen\', \'moveOver\', {duration: 100}, \'x\', -1);\n      transitionArgs.push.apply(transitionArgs, Array.prototype.slice.call(arguments, 4));\n\n      return window.$.Velocity(el, \'scroll\', options).then(function() {\n        nextTransition.apply(self, transitionArgs);\n      });\n    }\n  });//# sourceURL=frontend/transitions/scroll-then.js");

;eval("define(\"frontend/transitions/to-down\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'y\', 1);\n  });//# sourceURL=frontend/transitions/to-down.js");

;eval("define(\"frontend/transitions/to-left\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'x\', -1);\n  });//# sourceURL=frontend/transitions/to-left.js");

;eval("define(\"frontend/transitions/to-right\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'x\', 1);\n  });//# sourceURL=frontend/transitions/to-right.js");

;eval("define(\"frontend/transitions/to-up\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'y\', -1);\n  });//# sourceURL=frontend/transitions/to-up.js");

;eval("define(\"frontend/views/liquid-child\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ContainerView.extend({\n      classNames: [\'liquid-child\'],\n      resolveInsertionPromise: Ember.on(\'didInsertElement\', function(){\n        // Children start out hidden and invisible.\n        // Measurement will `show` them and Velocity will make them visible.\n        // This prevents a flash of pre-animated content.\n        this.$().css({visibility: \'hidden\'}).hide();\n        if (this._resolveInsertion) {\n          this._resolveInsertion(this);\n        }\n      })\n    });\n  });//# sourceURL=frontend/views/liquid-child.js");

;eval("define(\"frontend/views/liquid-if\", \n  [\"frontend/views/liquid-outlet\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LiquidOutlet = __dependency1__[\"default\"];\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = LiquidOutlet.extend({\n      liquidUpdate: Ember.on(\'init\', Ember.observer(\'showFirst\', function(){\n        var template = this.get(\'templates\')[this.get(\'showFirst\') ? 0 : 1];\n        if (!template || template === Ember.Handlebars.VM.noop) {\n          this.set(\'currentView\', null);\n          return;\n        }\n        var view = Ember._MetamorphView.create({\n          container: this.container,\n          template: template,\n          liquidParent: this,\n          contextBinding: \'liquidParent.context\',\n          liquidContext: this.get(\"showFirst\"),\n          hasLiquidContext: true\n        });\n        this.set(\'currentView\', view);\n      }))\n\n    });\n  });//# sourceURL=frontend/views/liquid-if.js");

;eval("define(\"frontend/views/liquid-outlet\", \n  [\"ember\",\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Promise = __dependency2__.Promise;\n    var animate = __dependency2__.animate;\n    var stop = __dependency2__.stop;\n    var capitalize = Ember.String.capitalize;\n\n    __exports__[\"default\"] = Ember.ContainerView.extend({\n      classNames: [\'liquid-container\'],\n      growDuration: 250,\n      growPixelsPerSecond: 200,\n      growEasing: \'slide\',\n      enableGrowth: true,\n\n      init: function(){\n        // The ContainerView constructor normally sticks our \"currentView\"\n        // directly into _childViews, but we want to leave that up to\n        // _currentViewDidChange so we have the opportunity to launch a\n        // transition.\n        this._super();\n        Ember.A(this._childViews).clear();\n\n        if (this.get(\'containerless\')) {\n          // This prevents Ember from throwing an assertion when we try to\n          // render as a virtual view.\n          this.set(\'innerClassNameBindings\', this.get(\'classNameBindings\'));\n          this.set(\'classNameBindings\', Ember.A());\n        }\n      },\n\n      // Deliberately overriding a private method from\n      // Ember.ContainerView!\n      //\n      // We need to stop it from destroying our outgoing child view\n      // prematurely.\n      _currentViewWillChange: Ember.beforeObserver(\'currentView\', function() {}),\n\n      // Deliberately overriding a private method from\n      // Ember.ContainerView!\n      _currentViewDidChange: Ember.on(\'init\', Ember.observer(\'currentView\', function() {\n        // Normally there is only one child (the view we\'re\n        // replacing). But sometimes there may be two children (because a\n        // transition is already in progress). In any case, we tell all of\n        // them to start heading for the exits now.\n\n        var oldView = this.get(\'childViews.lastObject\'),\n            newView = this.get(\'currentView\'),\n            firstTime;\n\n        // For the convenience of the transition rules, we explicitly\n        // track our first transition, which happens at initial render.\n        firstTime = !this._hasTransitioned;\n        this._hasTransitioned = true;\n\n        // Idempotence\n        if ((!oldView && !newView) ||\n            (oldView && oldView.get(\'currentView\') === newView) ||\n            (this._runningTransition &&\n             this._runningTransition.oldView === oldView &&\n             this._runningTransition.newContent === newView\n            )) {\n          return;\n        }\n\n        // `transitions` comes from dependency injection, see the\n        // liquid-fire app initializer.\n        var transition = this.get(\'transitions\').transitionFor(this, oldView, newView, this.get(\'use\'), firstTime);\n\n        if (this._runningTransition) {\n          this._runningTransition.interrupt();\n        }\n\n        this._runningTransition = transition;\n        transition.run()[\"catch\"](function(err){\n          // Force any errors through to the RSVP error handler, because\n          // of https://github.com/tildeio/rsvp.js/pull/278.  The fix got\n          // into Ember 1.7, so we can drop this once we decide 1.6 is\n          // EOL.\n          Ember.RSVP.Promise.resolve()._onerror(err);\n        });\n      })),\n\n      _liquidChildFor: function(content) {\n        if (content && !content.get(\'hasLiquidContext\')){\n          content.set(\'liquidContext\', content.get(\'context\'));\n        }\n        var LiquidChild = this.container.lookupFactory(\'view:liquid-child\');\n        var childProperties = {\n          currentView: content\n        };\n        if (this.get(\'containerless\')) {\n          childProperties.classNames = this.get(\'classNames\').without(\'liquid-container\');\n          childProperties.classNameBindings = this.get(\'innerClassNameBindings\');\n        }\n        return LiquidChild.create(childProperties);\n      },\n\n      _pushNewView: function(newView) {\n        if (!newView) {\n          return Promise.resolve();\n        }\n        var child = this._liquidChildFor(newView),\n            promise = new Promise(function(resolve) {\n              child._resolveInsertion = resolve;\n            });\n        this.pushObject(child);\n        return promise;\n      },\n\n      cacheSize: function() {\n        var elt = this.$();\n        if (elt) {\n          // Measure original size.\n          this._cachedSize = getSize(elt);\n        }\n      },\n\n      unlockSize: function() {\n        var self = this;\n        function doUnlock(){\n          var elt = self.$();\n          if (elt) {\n            elt.css({width: \'\', height: \'\'});\n          }\n        }\n        if (this._scaling) {\n          this._scaling.then(doUnlock);\n        } else {\n          doUnlock();\n        }\n      },\n\n      _durationFor: function(before, after) {\n        return Math.min(this.get(\'growDuration\'), 1000*Math.abs(before - after)/this.get(\'growPixelsPerSecond\'));\n      },\n\n      _adaptDimension: function(dimension, before, after) {\n        if (before[dimension] === after[dimension] || !this.get(\'enableGrowth\')) {\n          var elt = this.$();\n          if (elt) {\n            elt[dimension](after[dimension]);\n          }\n          return Promise.resolve();\n        } else {\n          // Velocity deals in literal width/height, whereas jQuery deals\n          // in box-sizing-dependent measurements.\n          var target = {};\n          target[dimension] = [\n            after[\'literal\'+capitalize(dimension)],\n            before[\'literal\'+capitalize(dimension)],\n          ];\n          return animate(this, target, {\n            duration: this._durationFor(before[dimension], after[dimension]),\n            queue: false,\n            easing: this.get(\'growEasing\')\n          });\n        }\n      },\n\n      adaptSize: function() {\n        stop(this);\n\n        var elt = this.$();\n        if (!elt) { return; }\n\n        // Measure new size.\n        var newSize = getSize(elt);\n        if (typeof(this._cachedSize) === \'undefined\') {\n          this._cachedSize = newSize;\n        }\n\n        // Now that measurements have been taken, lock the size\n        // before the invoking the scaling transition.\n        elt.width(this._cachedSize.width);\n        elt.height(this._cachedSize.height);\n\n        this._scaling = Promise.all([\n          this._adaptDimension(\'width\', this._cachedSize, newSize),\n          this._adaptDimension(\'height\', this._cachedSize, newSize),\n        ]);\n      }\n\n    });\n\n    // We\'re tracking both jQuery\'s box-sizing dependent measurements and\n    // the literal CSS properties, because it\'s nice to get/set dimensions\n    // with jQuery and not worry about boz-sizing *but* Velocity needs the\n    // raw values.\n    function getSize(elt) {\n      return {\n        width: elt.width(),\n        literalWidth: parseInt(elt.css(\'width\'),10),\n        height: elt.height(),\n        literalHeight: parseInt(elt.css(\'height\'),10)\n      };\n    }\n  });//# sourceURL=frontend/views/liquid-outlet.js");

;eval("define(\"frontend/views/liquid-with\", \n  [\"frontend/views/liquid-outlet\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LiquidOutlet = __dependency1__[\"default\"];\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = LiquidOutlet.extend({\n      liquidUpdate: Ember.on(\'init\', Ember.observer(\'boundContext\', function(){\n        var context = this.get(\'boundContext\');\n        if (Ember.isEmpty(context)) {\n          this.set(\'currentView\', null);\n          return;\n        }\n        var view = Ember._MetamorphView.create({\n          container: this.container,\n          templateName: \'liquid-with\',\n          boundContext: context,\n          liquidWithParent: this,\n          liquidContext: context,\n          hasLiquidContext: true,\n        });\n        this.set(\'currentView\', view);\n      }))\n\n    });\n  });//# sourceURL=frontend/views/liquid-with.js");

/* jshint ignore:start */

define('frontend/config/environment', ['ember'], function(Ember) {
  var prefix = 'frontend';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('frontend/tests/test-helper');
} else {
  require('frontend/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
